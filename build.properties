# Defaults
name=${phing.project.name}
root=${project.basedir}

# Source
src.dir=${root}/src

# Tests
test.dir=${root}/test

# Resources
res.dir=${root}/res

# Vendor
vendor.dir=${root}/vendor
vendor.bindir=${vendor.dir}/bin

# Phing
phing.exec=${vendor.dir}/phing/phing/bin/phing
phing.args=

# Build
build.dir=${root}/build
build.output.dir=${build.dir}/output
build.output.src.dir=${build.output.dir}/src
build.output.doc.dir=${build.output.dir}/doc
build.output.log.dir=${build.output.dir}/log
build.tarball=${root}/build/build.tar.gz

# Composer
composer.exec=php composer.phar
composer.lock=composer.lock
composer.update.args=update
composer.install.args=install

# PHP Code Sniffer
phpcs.log.dir=${build.output.log.dir}/phpcs
phpcs.log.xml=${phpcs.log.dir}/phpcs-output.xml
phpcs.log.json=${phpcs.log.dir}/phpcs-output.json
phpcs.log.xslt=${res.dir}/phpcs.xslt
phpcs.log.html=${phpcs.log.dir}/phpcs-output.htm
phpcs.msg=Executing PHP Code Sniffer. The output is in the '${phpcs.log.dir}' directory.
phpcs.dir=${vendor.dir}/squizlabs/php_codesniffer
phpcs.exec=php ${phpcs.dir}/scripts/phpcs
phpcs.args=--standard=PSR2 --report-checkstyle=${phpcs.log.xml} --report-json=${phpcs.log.json} ${src.dir}

# PHP Mess Detector
phpmd.log.dir=${build.output.log.dir}/phpmd
phpmd.log.xml=${phpmd.log.dir}/phpmd-output.xml
phpmd.log.xslt=${res.dir}/phpmd.xslt
phpmd.log.html=${phpmd.log.dir}/phpmd-output.htm
phpmd.msg=Executing PHP Mess Detector. The output is in the '${phpmd.log.dir}' directory.
phpmd.dir=${vendor.dir}/phpmd/phpmd
phpmd.exec=php ${phpmd.dir}/src/bin/phpmd
phpmd.args=${src.dir} xml cleancode,codesize,controversial,design,naming,unusedcode --reportfile ${phpmd.log.xml}

# PHPLOC
phploc.log.dir=${build.output.log.dir}/phploc
phploc.log.csv=${phploc.log.dir}/phploc-output.csv
phploc.log.xml=${phploc.log.dir}/phploc-output.xml
phploc.msg=Executing PHPLOC. The output is in the '${phploc.log.dir}' directory.
phploc.dir=${vendor.dir}/phploc/phploc
phploc.exec=php ${phploc.dir}/phploc
phploc.args=--count-tests --log-csv ${phploc.log.csv} --log-xml ${phploc.log.xml} ${src.dir} ${test.dir}

# PHPCPD
phpcpd.log.dir=${build.output.log.dir}/phpcpd
phpcpd.log.xml=${phpcpd.log.dir}/phpcpd-output.xml
phpcpd.msg=Executing PHPCPD. The output is in the '${phpcpd.log.dir}' directory.
phpcpd.dir=${vendor.dir}/sebastian/phpcpd
phpcpd.exec=php ${phpcpd.dir}/phpcpd
phpcpd.args=--log-pmd ${phpcpd.log.xml} ${src.dir} ${test.dir}

# PHPUnit
phpunit.log.dir=${build.output.log.dir}/phpunit
phpunit.msg=Executing PHPUnit. The output is in the '${phpunit.log.dir}' directory.
phpunit.dir=${vendor.dir}/phpunit
phpunit.config=${root}/.phpunit.build.xml
phpunit.bootstrap=${root}/.phpunit.bootstrap.php
phpunit.exec=php ${phpunit.dir}/phpunit/phpunit
phpunit.args=--bootstrap ${phpunit.bootstrap} --configuration ${phpunit.config}

# PHPDocumentor
phpdoc.msg=Executing PHPDocumentor. The output is in the '${build.output.doc.dir}' directory.
phpdoc.dir=${vendor.dir}/phpdocumentor
phpdoc.exec=php ${phpdoc.dir}/phpdocumentor/bin/phpdoc
phpdoc.args=-d ${src.dir} -t ${build.output.doc.dir} --template=clean
